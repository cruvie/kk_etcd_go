// Code generated by grpc_api_gen. DO NOT EDIT.

package api_impl

import (
	"context"
	"google.golang.org/grpc"

	"gitee.com/cruvie/kk_go_kit/kk_grpc"

	"github.com/cruvie/kk_etcd_go/kk_etcd_api_hub/role/api_def"
	"github.com/cruvie/kk_etcd_go/kk_etcd_api_hub/role/api_handlers/roleAdd"
	"github.com/cruvie/kk_etcd_go/kk_etcd_api_hub/role/api_handlers/roleDelete"
	"github.com/cruvie/kk_etcd_go/kk_etcd_api_hub/role/api_handlers/roleGet"
	"github.com/cruvie/kk_etcd_go/kk_etcd_api_hub/role/api_handlers/roleGrantPermission"
	"github.com/cruvie/kk_etcd_go/kk_etcd_api_hub/role/api_handlers/roleList"
	"github.com/cruvie/kk_etcd_go/kk_etcd_api_hub/role/api_handlers/roleRevokePermission"
)

type server struct {
	api_def.UnimplementedRoleServer
}

func RegisterServer(grpcServer *grpc.Server) {
	api_def.RegisterRoleServer(grpcServer, &server{})
}

func (x *server) RoleAdd(ctx context.Context, input *api_def.RoleAdd_Input) (*api_def.RoleAdd_Output, error) {
	return kk_grpc.GrpcHandler(
		ctx,
		input,
		roleAdd.NewApi,
	)
}

func (x *server) RoleDelete(ctx context.Context, input *api_def.RoleDelete_Input) (*api_def.RoleDelete_Output, error) {
	return kk_grpc.GrpcHandler(
		ctx,
		input,
		roleDelete.NewApi,
	)
}

func (x *server) RoleGet(ctx context.Context, input *api_def.RoleGet_Input) (*api_def.RoleGet_Output, error) {
	return kk_grpc.GrpcHandler(
		ctx,
		input,
		roleGet.NewApi,
	)
}

func (x *server) RoleGrantPermission(ctx context.Context, input *api_def.RoleGrantPermission_Input) (*api_def.RoleGrantPermission_Output, error) {
	return kk_grpc.GrpcHandler(
		ctx,
		input,
		roleGrantPermission.NewApi,
	)
}

func (x *server) RoleList(ctx context.Context, input *api_def.RoleList_Input) (*api_def.RoleList_Output, error) {
	return kk_grpc.GrpcHandler(
		ctx,
		input,
		roleList.NewApi,
	)
}

func (x *server) RoleRevokePermission(ctx context.Context, input *api_def.RoleRevokePermission_Input) (*api_def.RoleRevokePermission_Output, error) {
	return kk_grpc.GrpcHandler(
		ctx,
		input,
		roleRevokePermission.NewApi,
	)
}
